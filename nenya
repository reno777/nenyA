#!/bin/sh
#Title: Nenya
#Description: A tool to obfuscate your network traffic with random pcaps
#Made by: Reno777 and Catphish1994
#License: MIT

#main function

function main {
	network_test
	dependency_check
	pcaps_locate
	pcaps_replay
}

#development function

#function Ftest {
	#insert testing function(s)
#}

#function to check users network connectivity

function network_test {

	echo 'Testing your network connectivity. PLEASE WAIT!!!'
	ping -c 4 www.google.com &> /dev/null
	if [ $? == 0 ]; then
		echo 'Your connection is good!'
	else
		echo 'Please setup network connectivity before using Nenya!'
		exit 1
	fi
}

#checks to verify dependencies

function dependency_check {
	echo
	echo 'Verifying that you have the correct dependencies!'
	which tcpreplay &> /dev/null && which locate &> /dev/null && which route &> /dev/null
	if [ $? == 1 ]; then
		echo 'You need to ensure you have "tcpreplay", "mlocate" and "route" installed to continue!'
		exit 1
	else
		echo 'Dependencies verified.'
	fi
}

#locates .pcap files on users system and consolidates them to one directory

function pcaps_locate {
	echo 'Locating packet capture files.'
	locate *.pcap | xargs cp -t pcaps/ &> /dev/null #change directory after finish
}

#replays packet captures through interface

function pcaps_replay {
	#echo -n "Enter your network interface: "
	#read iface
	iface=`route | grep 'default' | grep -o '[^ ]*$'`
	tcpreplay -l 2 -M=50 -i $iface  pcaps/* #directory may change as noted in pcaps_locate function
}


#this is just for the development of this tool so that we can test functions
#before adding them to the main function
#function dev_prompt {
#  while true; do
#    echo -n 'Do you want to run the main function or the test function? [M/t]: '
#    read input
#    default='m'
#    input="${input:-${default}}"
#    input="${input,,}"
#    if [ "$input" == 'm' ] || [ "$input" == 'main' ]; then
#      main
#      break
#    elif [ "$input" == 't' ] || [ "$input" == 'test' ]; then
#      Ftest
#      break
#    else
#      echo 'Fuck off!'
#    fi
#  done
#}

#dev_prompt 
main


